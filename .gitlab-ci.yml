stages:
  - dependencies
  - build
  - tests-and-checks
  - build-container-image

default:
  before_script:
    - dnf install -y automake autoconf libtool texinfo libcurl-devel json-c-devel libxml2-devel gnutls-devel libmicrohttpd-devel

dependencies-libsecurityheaders:
  stage: dependencies
  tags:
    - linux
    - cpp
    - make
  before_script: [] # Override the global before script
  script:
    - dnf install -y git
    # TODO: Use a real certificate for gitlab then we don't have to ignore self signed certificates
    # NOTE: I always forget, but you have to add this project to the list of projects that are allowed to use it from an access token in
    # the gitlab web interface: libsecurityheaders > CI/CD > Token Access > Allow access to this project with a CI_JOB_TOKEN
    - git -c http.sslVerify=false clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.network.home:2443/dev/public/libsecurityheaders.git
    # HACK: Remove the .git directory in the libsecurityheaders folder so that it is copied to further stages (Otherwise it deletes everything below it between stages)
    - rm -rf libsecurityheaders/.git/
  artifacts:
    untracked: true

build:
  stage: build
  needs: [dependencies-libsecurityheaders]
  tags:
    - linux
    - cpp
    - make
  script:
    - cmake . -D SECURITYHEADERS_INCLUDE_DIR=$PWD/libsecurityheaders/include
    - make -j
  artifacts:
    untracked: true

unit-test:
  stage: tests-and-checks
  needs: [build]
  tags:
    - linux
  script:
    - dnf install -y openssl
    - openssl genrsa -out unit_test_server.key 2048
    - openssl rsa -in unit_test_server.key -out unit_test_server.key
    - openssl req -sha256 -new -key unit_test_server.key -out unit_test_server.csr -subj '/CN=localhost'
    - openssl x509 -req -sha256 -days 365 -in unit_test_server.csr -signkey unit_test_server.key -out unit_test_server.crt
    - mv unit_test_server.key unit_test_server.crt test/configuration/
    - ./unit_tests

build-container-image:
  stage: build-container-image
  needs: [unit-test]
  tags:
    - build-container-image # Build on the shell gitlab runner
  before_script: [] # Override the global before script
  script:
    - echo "CI_REGISTRY is $CI_REGISTRY"
    - podman login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" --cert-dir /home/gitlab-runner/.gitlab-runner/certs/ $CI_REGISTRY
    - podman build -t $CI_REGISTRY/dev/public/task-tracker:latest .
    - podman push --cert-dir /home/gitlab-runner/.gitlab-runner/certs/ $CI_REGISTRY/dev/public/task-tracker:latest
